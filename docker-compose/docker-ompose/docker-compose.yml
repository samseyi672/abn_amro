services:  

    usersdb:
      container_name: usersdb
      ports:
        - "3306:3306"
      volumes:
        - usersdb_data:/var/lib/mysql
      environment:
        MYSQL_DATABASE: users_db
      extends:
        file: common-config.yml
        service: microservice-db-config

    # userstestdb:
    #   container_name: userstestdb
    #   ports:
    #     - "3309:3306"
    #   volumes:
    #     - userstestdb_data:/var/lib/mysql
    #   environment:
    #     MYSQL_DATABASE: users_db
    #   extends:
    #     file: common-config.yml
    #     service: microservice-db-config

    recipedb:
      container_name: recipedb
      ports:
        - "3307:3306"
      volumes:
        - recipedb_data:/var/lib/mysql
      environment:
        MYSQL_DATABASE: recipe_db
      extends:
        file: common-config.yml
        service: microservice-db-config

    # recipetestdb:
    #   container_name: recipedb
    #   ports:
    #     - "3308:3306"
    #   volumes:
    #     - recipetestdb_data:/var/lib/mysql
    #   environment:
    #     MYSQL_DATABASE: recipe_db
    #   extends:
    #     file: common-config.yml
    #     service: microservice-db-config

    redis:
      image: redis:7.2
      container_name: redis-server
      restart: unless-stopped
      ports:
        - "6379:6379"
      command: [
        "redis-server",
        "--appendonly", "yes",
        "--requirepass", "Trust@@$$Banc_COOperate**#%%$$Group"
      ]
      volumes:
        - redis_data:/data
volumes:
  recipedb_data:
    driver: local
  usersdb_data:
    driver: local
  redis_data:
    driver: local

  # configserver:
  #   image: "samseyi672/configserver:1"
  #   container_name: configserver-ms
  #   ports:
  #     - "8071:8071"
  #   healthcheck:
  #     test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 10s
  #   extends:
  #     file: common-config.yml
  #     service: microservice-base-config

  # recipe:
  #   image: "samseyi672/recipemanager:1"
  #   container_name: recipemanagement-ms
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SPRING_APPLICATION_NAME: "recipemanagement"
  #     SPRING_DATASOURCE_URL: "jdbc:mysql://recipedb:3306/recipe_db"
  #   depends_on:
  #     recipedb:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     configserver:
  #       condition: service_healthy
  #   extends:
  #     file: common-config.yml
  #     service: microservice-configserver-config
  #   volumes:
  #     - ./docker-logs:/logs
  
  # gatewayserver:
  #   image: "samseyi/apigateway:1"
  #   container_name: apigateway-ms
  #   ports:
  #     - "8072:8072"
  #   depends_on:
  #     users:
  #       condition: service_healthy
  #     recipe:
  #       condition: service_healthy
  #   environment:
  #     SPRING_APPLICATION_NAME: "apigateway"
  #     OTEL_SERVICE_NAME: "apigateway"
  #     SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: "http://keycloak:8080/realms/master/protocol/openid-connect/certs"
  #   extends:
  #     file: common-config.yml
  #     service: microservice-eureka-config

  # eurekaserver:
  #   image: "samseyi672/eurekaserver:1"
  #   container_name: eurekaserver-ms
  #   ports:
  #     - "8070:8070"
  #   depends_on:
  #     configserver:
  #       condition: service_healthy
  #   healthcheck:
  #     test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
  #     interval: 20s
  #     timeout: 5s
  #     retries: 20
  #     start_period: 10s
  #   extends:
  #     file: common-config.yml
  #     service: microservice-configserver-config
  #   environment:
  #     SPRING_APPLICATION_NAME: "eurekaserver"
  #     OTEL_SERVICE_NAME: "eurekaserver"

  # user:
  #   image: "samseyi672/user:1"
  #   container_name: user-ms
  #   ports:
  #     - "8090:8090"
  #   environment:
  #     SPRING_APPLICATION_NAME: "user"
  #     SPRING_DATASOURCE_URL: "jdbc:mysql://usersdb:3306/users_db"
  #   depends_on:
  #     usersdb:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     configserver:
  #       condition: service_healthy
  #   extends:
  #     file: common-config.yml
  #     service: microservice-configserver-config
  #   volumes:
  #     - ./docker-logs:/logs
networks:
  abn_amro_bank:
    driver: "bridge"